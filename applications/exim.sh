compile_exim()
{
  local translator="$1" parallelism="${parallelism:=1}"

  if [ -z "$translator" ]; then
    echo "Usage: compile_exim <name of rose translator>"
    exit 1
  fi

  #-----------------------------------------------------------------------------
  # Configure  Meta Information
  #-----------------------------------------------------------------------------
  declare -r VERSION=4.66
  declare -r TARBALL="exim-${VERSION}.tar.gz"
  declare -r DOWNLOAD_URL="http://ftp.exim.llorien.org/exim/exim4/${TARBALL}"

  #-----------------------------------------------------------------------------
  # Create Workspace
  #-----------------------------------------------------------------------------
  create_workspace "exim"
  cd "exim" || exit 1

  #-----------------------------------------------------------------------------
  # Download and Unpack
  #-----------------------------------------------------------------------------
  download "${TARBALL}" "$DOWNLOAD_URL"
  tar xzvf "${TARBALL}" || exit 1
  cd  "exim-${VERSION}" || exit 1

  #-----------------------------------------------------------------------------
  # Configure
  #-----------------------------------------------------------------------------
  cp src/EDITME Local/Makefile
  (
      echo "CC=$translator"
      echo "CFLAGS=-I$(pwd)/build-Linux-x86_64"
      echo "EXIM_USER=$USER"
      echo "BIN_DIRECTORY=$(pwd)/install_tree/bin"
      echo "CONFIGURE_FILE=$(pwd)/install_tree/configure"
  ) 2>&1 >> Local/Makefile
  [ ${PIPESTATUS[0]} -ne 0 ] && exit 1 || true

  # Create eximon configuration
  cp exim_monitor/EDITME Local/eximon.conf

  cat src/pcre/config.h | sed 's/#include "..\/os.h"/#include "os.h"/g' > src/pcre/config.h-new
  cp src/pcre/config.h src/pcre/config.h-old
  cp src/pcre/config.h-new src/pcre/config.h

  #-----------------------------------------------------------------------------
  # Hack
  #-----------------------------------------------------------------------------
  # Hack: Replace #include "cnumber.h" with the actual number contained in
  # that header file:
  #
  # // DQ (10/23/2012): Modified source code to avoid this classic source-to-source
  # // issue (represented by ROSE test code test2012_78.c).
  files="$(grep -rn "#include \"cnumber.h\"" * | awk '{print $1}' | sed 's/:.*:.*//g')"
  # Generated by Make
  #cnumber_file="$(find . -iname "*cnumber\.h")"
  #cnumber="$(cat "$cnumber_file")"
  cnumber="6"
  for f in $files; do
    echo "Hacking file '$f' to replace '#include \"cnumber.h\"' with the actual contents '${cnumber}'..."
    mv $f $f-old
    cat "${f}-old" | sed 's/#include "cnumber\.h"/'${cnumber}'/g' > "$f"
  done

  #-----------------------------------------------------------------------------
  # Build
  #-----------------------------------------------------------------------------
  make --keep-going -j${parallelism} || exit 1
}
